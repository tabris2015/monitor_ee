from django import forms
from rango.models import Page, Category, UserProfile
from django.contrib.auth.models import User


class CategoryForm(forms.ModelForm):
    """formulario para categoria"""
    name = forms.CharField(max_length=128, help_text="por favor ingrese nombre de categoria")
    views = forms.IntegerField(widget=forms.HiddenInput(),initial=0)
    likes = forms.IntegerField(widget=forms.HiddenInput(),initial=0)
    slug = forms.CharField(widget=forms.HiddenInput(),required=False)

    #una clase en linea provee informacion adicional
    class Meta:
	# Provee una asociacion entre el modelform y un modelo
        model=Category
	fields = ('name',)

class PageForm(forms.ModelForm):
    """formulario para pagina"""
    title = forms.CharField(max_length=128, help_text="ingrese el titulo de una pagina")
    url = forms.URLField(max_length=200, help_text="Please enter the URL of the page.")
    views = forms.IntegerField(widget=forms.HiddenInput(), initial=0)

    class Meta:
        # Provide an association between the ModelForm and a model
        model = Page

        # What fields do we want to include in our form?
        # This way we don't need every field in the model present.
        # Some fields may allow NULL values, so we may not want to include them...
        # Here, we are hiding the foreign key.
        # we can either exclude the category field from the form,
        exclude = ('category',)
        #or specify the fields to include (i.e. not include the category field)
        #fields = ('title', 'url', 'views')
    
    def clean(self):
	"""metodo para poner valores por defecto"""
	cleaned_data = self.cleaned_data	#atributo del objeto ModelForm
	url = cleaned_data.get('url')
	
	#si url no esta vacio empezar con 'http://'
	if url and not url.startswith('http://'):
	    url = 'http://' + url
	    cleaned_data['url'] = url
	
	return cleaned_data			#importante!

class UserForm(forms.ModelForm):
    """formulario para el usuario"""
    password = forms.CharField(widget=forms.PasswordInput())

    class Meta:
	model = User
	fields = ('username', 'email', 'password')

class UserProfileForm(forms.ModelForm):
    """formulario para el perfil del usuario"""
    class Meta:
	model = UserProfile
	fields = ('website', 'picture')
#------------------------------------------------
# FORMULARIOS DEL SISTEMA DE MONITOREO
#-----------------------------------------------
class SearchDiaForm(forms.ModelForm):
    """formulario para buscar el consumo de un dia en especifico"""
    dia = forms.DatetimeField(widget=forms.DateInput())
    
    class Meta:
	model=Medidas
	fields = ('dia',)
